
CONTINUOUS_RANGES = [
    (0x00, 0x20, 0x2400),
    (0x80, 0xA0, 0xE000),

    (0x180B, 0x180F, 0xF0000),
    (0x2000, 0x2011, 0xF0000),
    (0x2028, 0x202F, 0xF0000),
    (0x205F, 0x2064, 0xF0000),
    (0x2066, 0x206F, 0xF0000),
    # (0x2596, 0x259F, 0xF0000),
    # (0x2FF0, 0x2FFF, 0xF0000),
    (0xFE00, 0xFE0F, 0xF0000),
    (0xFFF9, 0xFFFC, 0xF0000),

    (0x13430, 0x13455, 0xF0000),
    (0x1BCA0, 0x1BCA3, 0xF0000),
    (0x1D173, 0x1D17A, 0xF0000),
    (0x1DA9B, 0x1DA9F, 0xF0000),
    (0x1DAA1, 0x1DAAF, 0xF0000),

    (0xE0020, 0xE007F, -0xD2000),
    (0xE0100, 0xE01EF, -0xD2000),
]

DISCRETE = {
    0xAD: 0xE000,
    0x34F: 0xE000,
    0x61C: 0xE000,
    0x890: 0xE000,
    0x891: 0xE000,
    0x2022: 0xF0000,
    # 0x2191: 0xF0000, 0x2193: 0xF0000, 0x2236: 0xF0000, 0x23F4: 0xF0000, 0x23F5: 0xF0000, 0x25C0: 0xF0000, 0x25B6: 0xF0000,
    0x2424: 0xF0000,
    # 0x2580: 0xF0000, 0x2584: 0xF0000, 0x258C: 0xF0000, 0x2590: 0xF0000, 0x25B2: 0xF0000, 0x25BC: 0xF0000, 0x25E6: 0xF0000, 0x2660: 0xF0000, 0x2663: 0xF0000, 0x2665: 0xF0000, 0x2666: 0xF0000,
    # 0x2B1A: 0xF0000,
    0x3000: 0xF0000,
    0x303E: 0xF0000,
    0xFEFF: 0xF0000,

    0x1107F: 0xF0000,
    0x11A47: 0xF0000,
    0x11D45: 0xF0000,
    0x11D97: 0xF0000,
    0x11F42: 0xF0000,
    0x16FE4: 0xF0000,
    0x1BC9D: 0xF0000,
    0x1D159: 0xF0000,

    0xE0001: -0xD2000,
}

CHAR_MAP = {
    0x7F: chr(0x2421),   # 特殊点

    # 连续区间
    **{
        _code: chr(_code + offset)
        for start, end, offset in CONTINUOUS_RANGES
        for _code in range(start, end + 1)
    },

    # 离散点
    **{
        _code: chr(_code + offset)
        for _code, offset in DISCRETE.items()
    }
}

def get_char(_code: int) -> str:
    """
    如果 code 在 CHAR_MAP 里，就直接返回预先映射好的字符；
    否则返回 chr(code)。
    from control_map import get_char
    """
    return CHAR_MAP.get(_code, chr(_code))