
CONTROL_CODES_2400 = {
    0x00,
    0x01,
    0x02,
    0x03,
    0x04,
    0x05,
    0x06,
    0x07,
    0x08,
    0x09,
    0x0A,
    0x0B,
    0x0C,
    0x0D,
    0x0E,
    0x0F,
    0x10,
    0x11,
    0x12,
    0x13,
    0x14,
    0x15,
    0x16,
    0x17,
    0x18,
    0x19,
    0x1A,
    0x1B,
    0x1C,
    0x1D,
    0x1E,
    0x1F,
    0x20,
    0x7F,
}

CONTROL_CODES_E000 = {
    0x80,
    0x81,
    0x82,
    0x83,
    0x84,
    0x85,
    0x86,
    0x87,
    0x88,
    0x89,
    0x8A,
    0x8B,
    0x8C,
    0x8D,
    0x8E,
    0x8F,
    0x90,
    0x91,
    0x92,
    0x93,
    0x94,
    0x95,
    0x96,
    0x97,
    0x98,
    0x99,
    0x9A,
    0x9B,
    0x9C,
    0x9D,
    0x9E,
    0x9F,
    0xA0,
    0xAD,
    0x34F,
    0x61C,
    0x890,
    0x891,
}

CONTROL_CODES_F0000 = {
    0x180B,
    0x180C,
    0x180D,
    0x180E,
    0x180F,
    0x2000,
    0x2001,
    0x2002,
    0x2003,
    0x2004,
    0x2005,
    0x2006,
    0x2007,
    0x2008,
    0x2009,
    0x200A,
    0x200B,
    0x200C,
    0x200D,
    0x200E,
    0x200F,
    0x2010,
    0x2011,
    0x2022,
    0x2028,
    0x2029,
    0x202A,
    0x202B,
    0x202C,
    0x202D,
    0x202E,
    0x202F,
    0x205F,
    0x2060,
    0x2061,
    0x2062,
    0x2063,
    0x2064,
    0x2066,
    0x2067,
    0x2068,
    0x2069,
    0x206A,
    0x206B,
    0x206C,
    0x206D,
    0x206E,
    0x206F,
    # 0x2191, 0x2193, 0x2236, 0x23F4, 0x23F5, 0x25C0, 0x25B6,
    0x2424,
    # 0x2580, 0x2584, 0x258C, 0x2590, 0x2596, 0x2597,0x2598, 0x2599, 0x259A, 0x259B, 0x259C, 0x259D, 0x259E, 0x259F, 0x25B2, 0x25BC, 0x25E6, 0x2660, 0x2663, 0x2665, 0x2666,
    # 0x2B1A, 0x2FF0, 0x2FF1, 0x2FF2, 0x2FF3, 0x2FF4, 0x2FF5, 0x2FF6, 0x2FF7, 0x2FF8, 0x2FF9, 0x2FFA, 0x2FFB, 0x2FFC, 0x2FFD, 0x2FFE, 0x2FFF,
    0x3000,
    0x303E,
    0xFE00,
    0xFE01,
    0xFE02,
    0xFE03,
    0xFE04,
    0xFE05,
    0xFE06,
    0xFE07,
    0xFE08,
    0xFE09,
    0xFE0A,
    0xFE0B,
    0xFE0C,
    0xFE0D,
    0xFE0E,
    0xFE0F,
    0xFEFF,
    0xFFF9,
    0xFFFA,
    0xFFFB,
    0xFFFC,
}

CONTROL_CODES_100000 = {
    0x1107F,
    0x11A47,
    0x11D45,
    0x11D97,
    0x11F42,
    0x13430,
    0x13431,
    0x13432,
    0x13433,
    0x13434,
    0x13435,
    0x13436,
    0x13437,
    0x13438,
    0x13439,
    0x1343A,
    0x1343B,
    0x1343C,
    0x1343D,
    0x1343E,
    0x1343F,
    0x13440,
    0x13441,
    0x13442,
    0x13443,
    0x13444,
    0x13445,
    0x13446,
    0x13447,
    0x13448,
    0x13449,
    0x1344A,
    0x1344B,
    0x1344C,
    0x1344D,
    0x1344E,
    0x1344F,
    0x13450,
    0x13451,
    0x13452,
    0x13453,
    0x13454,
    0x13455,
    0x16FE4,
    0x1BC9D,
    0x1BCA0,
    0x1BCA1,
    0x1BCA2,
    0x1BCA3,
    0x1D159,
    0x1D173,
    0x1D174,
    0x1D175,
    0x1D176,
    0x1D177,
    0x1D178,
    0x1D179,
    0x1D17A,
    0x1DA9B,
    0x1DA9C,
    0x1DA9D,
    0x1DA9E,
    0x1DA9F,
    0x1DAA1,
    0x1DAA2,
    0x1DAA3,
    0x1DAA4,
    0x1DAA5,
    0x1DAA6,
    0x1DAA7,
    0x1DAA8,
    0x1DAA9,
    0x1DAAA,
    0x1DAAB,
    0x1DAAC,
    0x1DAAD,
    0x1DAAE,
    0x1DAAF,
}

CONTROL_CODES_E0000 = {
    0xE0001,
    0xE0020,
    0xE0021,
    0xE0022,
    0xE0023,
    0xE0024,
    0xE0025,
    0xE0026,
    0xE0027,
    0xE0028,
    0xE0029,
    0xE002A,
    0xE002B,
    0xE002C,
    0xE002D,
    0xE002E,
    0xE002F,
    0xE0030,
    0xE0031,
    0xE0032,
    0xE0033,
    0xE0034,
    0xE0035,
    0xE0036,
    0xE0037,
    0xE0038,
    0xE0039,
    0xE003A,
    0xE003B,
    0xE003C,
    0xE003D,
    0xE003E,
    0xE003F,
    0xE0040,
    0xE0041,
    0xE0042,
    0xE0043,
    0xE0044,
    0xE0045,
    0xE0046,
    0xE0047,
    0xE0048,
    0xE0049,
    0xE004A,
    0xE004B,
    0xE004C,
    0xE004D,
    0xE004E,
    0xE004F,
    0xE0050,
    0xE0051,
    0xE0052,
    0xE0053,
    0xE0054,
    0xE0055,
    0xE0056,
    0xE0057,
    0xE0058,
    0xE0059,
    0xE005A,
    0xE005B,
    0xE005C,
    0xE005D,
    0xE005E,
    0xE005F,
    0xE0060,
    0xE0061,
    0xE0062,
    0xE0063,
    0xE0064,
    0xE0065,
    0xE0066,
    0xE0067,
    0xE0068,
    0xE0069,
    0xE006A,
    0xE006B,
    0xE006C,
    0xE006D,
    0xE006E,
    0xE006F,
    0xE0070,
    0xE0071,
    0xE0072,
    0xE0073,
    0xE0074,
    0xE0075,
    0xE0076,
    0xE0077,
    0xE0078,
    0xE0079,
    0xE007A,
    0xE007B,
    0xE007C,
    0xE007D,
    0xE007E,
    0xE007F,
    0xE0100,
    0xE0101,
    0xE0102,
    0xE0103,
    0xE0104,
    0xE0105,
    0xE0106,
    0xE0107,
    0xE0108,
    0xE0109,
    0xE010A,
    0xE010B,
    0xE010C,
    0xE010D,
    0xE010E,
    0xE010F,
    0xE0110,
    0xE0111,
    0xE0112,
    0xE0113,
    0xE0114,
    0xE0115,
    0xE0116,
    0xE0117,
    0xE0118,
    0xE0119,
    0xE011A,
    0xE011B,
    0xE011C,
    0xE011D,
    0xE011E,
    0xE011F,
    0xE0120,
    0xE0121,
    0xE0122,
    0xE0123,
    0xE0124,
    0xE0125,
    0xE0126,
    0xE0127,
    0xE0128,
    0xE0129,
    0xE012A,
    0xE012B,
    0xE012C,
    0xE012D,
    0xE012E,
    0xE012F,
    0xE0130,
    0xE0131,
    0xE0132,
    0xE0133,
    0xE0134,
    0xE0135,
    0xE0136,
    0xE0137,
    0xE0138,
    0xE0139,
    0xE013A,
    0xE013B,
    0xE013C,
    0xE013D,
    0xE013E,
    0xE013F,
    0xE0140,
    0xE0141,
    0xE0142,
    0xE0143,
    0xE0144,
    0xE0145,
    0xE0146,
    0xE0147,
    0xE0148,
    0xE0149,
    0xE014A,
    0xE014B,
    0xE014C,
    0xE014D,
    0xE014E,
    0xE014F,
    0xE0150,
    0xE0151,
    0xE0152,
    0xE0153,
    0xE0154,
    0xE0155,
    0xE0156,
    0xE0157,
    0xE0158,
    0xE0159,
    0xE015A,
    0xE015B,
    0xE015C,
    0xE015D,
    0xE015E,
    0xE015F,
    0xE0160,
    0xE0161,
    0xE0162,
    0xE0163,
    0xE0164,
    0xE0165,
    0xE0166,
    0xE0167,
    0xE0168,
    0xE0169,
    0xE016A,
    0xE016B,
    0xE016C,
    0xE016D,
    0xE016E,
    0xE016F,
    0xE0170,
    0xE0171,
    0xE0172,
    0xE0173,
    0xE0174,
    0xE0175,
    0xE0176,
    0xE0177,
    0xE0178,
    0xE0179,
    0xE017A,
    0xE017B,
    0xE017C,
    0xE017D,
    0xE017E,
    0xE017F,
    0xE0180,
    0xE0181,
    0xE0182,
    0xE0183,
    0xE0184,
    0xE0185,
    0xE0186,
    0xE0187,
    0xE0188,
    0xE0189,
    0xE018A,
    0xE018B,
    0xE018C,
    0xE018D,
    0xE018E,
    0xE018F,
    0xE0190,
    0xE0191,
    0xE0192,
    0xE0193,
    0xE0194,
    0xE0195,
    0xE0196,
    0xE0197,
    0xE0198,
    0xE0199,
    0xE019A,
    0xE019B,
    0xE019C,
    0xE019D,
    0xE019E,
    0xE019F,
    0xE01A0,
    0xE01A1,
    0xE01A2,
    0xE01A3,
    0xE01A4,
    0xE01A5,
    0xE01A6,
    0xE01A7,
    0xE01A8,
    0xE01A9,
    0xE01AA,
    0xE01AB,
    0xE01AC,
    0xE01AD,
    0xE01AE,
    0xE01AF,
    0xE01B0,
    0xE01B1,
    0xE01B2,
    0xE01B3,
    0xE01B4,
    0xE01B5,
    0xE01B6,
    0xE01B7,
    0xE01B8,
    0xE01B9,
    0xE01BA,
    0xE01BB,
    0xE01BC,
    0xE01BD,
    0xE01BE,
    0xE01BF,
    0xE01C0,
    0xE01C1,
    0xE01C2,
    0xE01C3,
    0xE01C4,
    0xE01C5,
    0xE01C6,
    0xE01C7,
    0xE01C8,
    0xE01C9,
    0xE01CA,
    0xE01CB,
    0xE01CC,
    0xE01CD,
    0xE01CE,
    0xE01CF,
    0xE01D0,
    0xE01D1,
    0xE01D2,
    0xE01D3,
    0xE01D4,
    0xE01D5,
    0xE01D6,
    0xE01D7,
    0xE01D8,
    0xE01D9,
    0xE01DA,
    0xE01DB,
    0xE01DC,
    0xE01DD,
    0xE01DE,
    0xE01DF,
    0xE01E0,
    0xE01E1,
    0xE01E2,
    0xE01E3,
    0xE01E4,
    0xE01E5,
    0xE01E6,
    0xE01E7,
    0xE01E8,
    0xE01E9,
    0xE01EA,
    0xE01EB,
    0xE01EC,
    0xE01ED,
    0xE01EE,
    0xE01EF,
}

def get_char(_code: int) -> str:
    """
    如果 _code 在某个 CONTROL_CODES_* 集合中，
    就分别加上对应的偏移量，返回映射字符；
    否则，直接返回 chr(_code)。
    from control_map import get_char
    """
    if _code in CONTROL_CODES_2400:
        return chr(_code + 0x2400)
    if _code in CONTROL_CODES_E000:
        return chr(_code + 0xE000)
    if _code in CONTROL_CODES_F0000:
        return chr(_code + 0xF0000)
    if _code in CONTROL_CODES_100000:
        return chr(_code + 0xF0000)
    if _code in CONTROL_CODES_E0000:
        return chr(_code - 0xD2000)
    return chr(_code)